package com.bmod.registry.mob_effect.custom;

import com.bmod.BlubbysMod;
import com.bmod.registry.mob_effect.ModMobEffects;
import net.minecraft.nbt.CompoundTag;
import net.minecraft.server.level.ServerPlayer;
import net.minecraft.world.effect.MobEffect;
import net.minecraft.world.effect.MobEffectCategory;
import net.minecraft.world.effect.MobEffectInstance;
import net.minecraft.world.entity.LivingEntity;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.level.Level;

public class HorrifiedEffect extends MobEffect {

    protected HorrifiedEffect() {
        super(MobEffectCategory.HARMFUL, 0x551255);
    }

    @Override
    public void applyEffectTick(LivingEntity livingEntity, int i) {
        if (livingEntity.level.dimension() == Level.OVERWORLD && livingEntity instanceof ServerPlayer player)
            {
                for (ItemStack item : player.getInventory().items)
                {
                    CompoundTag tag = item.getTag();


                    if (tag != null) {
                        ServerPlayer linkedPlayer = null;

                        if (tag.hasUUID(BlubbysMod.MOD_ID + ":player_link"))
                            linkedPlayer = player.server.getPlayerList().getPlayer(tag.getUUID(BlubbysMod.MOD_ID + ":player_link"));

                        boolean linkedPlayerHorrified = linkedPlayer != null && linkedPlayer.hasEffect(ModMobEffects.HORRIFIED.get()); // isTheEntityThatIsExistentInTheObservableUniverseControllingTheGameThatHasTheNameMinecraftButHadTheNameCaveGameBeforeRefactoringTheNameToMinecraftLinkedToTheUniqueIdentifierExtractedFromTheTagOfTheCurrentIterationItemInTheForLoopAssociatedWithTheCurrentInstanceOfTheCardiacArrestEffectsEntityThatIsExistentInTheObservableUniverseControllingTheGameThatHasTheNameMinecraftButHadTheNameCaveGameBeforeRefactoringTheNameToMinecraftInGameGUIThatHasTheNameAndValuesOfTheEntityThatIsExistentInTheObservableUniverseControllingTheGameThatHasTheNameMinecraftButHadTheNameCaveGameBeforeRefactoringTheNameToMinecraftsInventoryStillConsideredToBeANullValueDueToTheAbsenceOfThePLAYER_LINK_UUIDInTheTagOrIsItDeterminedToBeAValidEntityThatResidesWithinTheServerCurrentEntityThatIsExistentInTheObservableUniverseControllingTheGameThatHasTheNameMinecraftButHadTheNameCaveGameBeforeRefactoringTheNameToMinecraftRegistryAndInTheEventThatItIsIdentifiedAsSuchAValidEntityWithinTheServerCurrentEntityThatIsExistentInTheObservableUniverseControllingTheGameThatHasTheNameMinecraftButHadTheNameCaveGameBeforeRefactoringTheNameToMinecraftRegistryDoesTheLinkedEntityExtractedFromTheUniqueIdentifierContainedInTheTagOfTheCurrentIterationItemInTheCurrentInstanceOfTheCardiacArrestEffectsEntityThatIsExistentInTheObservableUniverseControllingTheGameThatHasTheNameMinecraftButHadTheNameCaveGameBeforeRefactoringTheNameToMinecraftInGameGUIThatHasTheNameAndValuesOfTheEntityThatIsExistentInTheObservableUniverseControllingTheGameThatHasTheNameMinecraftButHadTheNameCaveGameBeforeRefactoringTheNameToMinecraftsInventoryEffectListPossessTheNonNullValueOfTheHorrifiedEffectOrIsItDeterminedThatTheLinkedEntityHasNotAchievedTheNecessaryGameStatusRequiredToReceiveTheHorrifiedEffectWithinTheCurrentContextOfTheGameStateAndThereforeIsTheLinkedEntityUltimatelyUnqualifiedToExperienceTheAssociatedConsequencesOfTheHorrifiedEffectAtThisTimeInTheEventThatTheEntityInQuestionHasNotYetReachedTheRequiredThresholdForStatusEffectsAndInSituationsWhereMultipleConditionsNeedToBeEvaluatedToEnsureThatTheLinkedEntityIsEligibleToReceiveSuchEffectsToBeAppliedInConjunctionWithTheOverallGameMechanicsAndRuleSetThatGovernTheApplicationOfStatusEffectsBasedOnEntityInteractionsAndGameProgressionDynamicsThusLeadingToAnInDepthAnalysisOfEntityEligibilityForStatusEffectApplicationUnderTheCurrentGameplayCircumstancesAndConsideringPotentialFutureEventsThatMayAffectEntityStatusRecognitionAndValidityWithinTheGameWhileAdditionallyAssessingTheImpactOfExternalFactorsOnTheEntityExperienceThatCouldInfluenceTheirInteractionWithTheGameWorldAndModifyTheirStatusEffectEligibilityInRealTimeBasedOnDynamicGameplayConditionsAndAdaptiveMechanicsInherentInTheGameDesignFrameworkAndTakingIntoAccountThePotentialConsequencesOfEntityChoicesInFutureGameScenariosWhichMayResultInVariableChangesToTheirStatusAndInteractionWithOtherEntitiesInOrderToFacilitateAnAdaptiveGameEnvironmentThatPromotesStrategicDecisionMakingAndEnsuresAComprehensiveUnderstandingOfGameMechanicsAsTheyRelateToEntityStatusEffectsInTheBroaderContextOfGameProgressionAndExperienceFlowButWithConsiderationOfTheImplicationsOfUserEngagementWithinTheGameWorldThatMayInduceShiftsInEntityBehaviorAndGameMechanicsOverTimeRequiringConstantMonitoringAndEvaluationToMaintainEntityInvolvementAndToEnhanceOverallGameplayExperienceThroughResponsiveGameDesignElementsThatAddressEntityNeedsAndIncentivizeContinuedParticipationAndReinforceTheEngagementMetricsThatDetermineEntitySuccessAndFulfillmentInTheComplexInterplayOfGameDynamicsAndUserExperienceInTheContextOfMultifacetedEntityInteractionsThatCouldSignificantlyAlterTheTrajectoryOfGameplayWhileMaintainingAFocusedApproachToUnderstandingTheNuancesOfEntityBehaviorWithinTheGameEcosystemToFosterAThrivingCommunityOfEngagedEntitiesInAnEnvironmentThatRewardsThoughtfulDecisionMakingAndStrategicGameplayChoicesInAnEverEvolvingVirtualLandscapeAndInConclusionItIsEssentialToRecognizeTheComprehensiveNatureOfThisVariableAsItRelatesToTheOverallGameplayExperienceAndItsPotentialImplicationsOnFutureEntityInteractionsThatMightOccurInResponseToGameMechanicsThatShiftDynamicallyWithEntityEngagementAndWithConsiderationForTheSubsequentImpactOfUserInputAndBehavioralTrendsThatMightAffectTheOverallPerformanceAndExperienceFlowWithinTheGameDynamicsUltimatelyLeadingToTheNecessityOfAContinualReviewAndAssessmentProcessToAdaptAndEvolveTheGameMechanicsInOrderToMaintainOptimalEntityEngagementAndSatisfactionOverExtendedPeriodsOfInteractionWithTheGameEnvironmentAndContinuouslyAssessTheComplexInterdependenciesOfGameMechanicsInRelationToUserBehaviorInTheDynamicGameWorldAndIncludingTheFactorsThatInfluencePlayerDecisionMakingAndEntityBehaviorInContextualGameSituationsWithEmphasisOnDynamicInteractionPathwaysThatEvolveWithUserEngagementInTheVirtualEnvironmentOverTimeAndRecognizingTheImplicationsOfUserChoicesOnGameMechanicsToEnhanceOverallExperienceAndFurtherExtendTheExistingFrameworkToEncapsulateNewGameElementsAndBehavioral would be a better variable name but I don't care.
                        if (tag.getInt(BlubbysMod.MOD_ID + ":pin") == 1 || linkedPlayerHorrified) {
                            livingEntity.addEffect(new MobEffectInstance(ModMobEffects.CARDIAC_ARREST.get(), 2, 0, false, false));
                    }
                }
            }
        }
    }

    @Override
    public boolean isDurationEffectTick(int currentTick, int frequency) {
        return true;
    }
}
